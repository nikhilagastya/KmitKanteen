{"ast":null,"code":"// import React, { useState, useRef, useEffect } from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useDispatchCart, useCart } from './ContextReducer'\n// // import { Dropdown, DropdownButton } from 'react-bootstrap';\n// export default function Card(props) {\n//   let data = useCart();\n\n//   let navigate = useNavigate()\n//   const [qty, setQty] = useState(1)\n//   const [size, setSize] = useState(\"\")\n//   const priceRef = useRef();\n//   // const [btnEnable, setBtnEnable] = useState(false);\n//   // let totval = 0\n//   // let price = Object.values(options).map((value) => {\n//   //   return parseInt(value, 10);\n//   // });\n//   let options = props.options;\n//   let priceOptions = Object.keys(options);\n//   let foodItem = props.item;\n//   const dispatch = useDispatchCart();\n//   const handleClick = () => {\n//     if (!localStorage.getItem(\"user\")) {\n//       navigate(\"/login\")\n//     }\n//   }\n//   const handleQty = (e) => {\n//     setQty(e.target.value);\n//   }\n//   const handleOptions = (e) => {\n//     setSize(e.target.value);\n//   }\n//   const handleAddToCart = async () => {\n//     let food = []\n//     for (const item of data) {\n//       if (item.id === foodItem._id) {\n//         food = item;\n\n//         break;\n//       }\n//     }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\n\n//     // setBtnEnable(true)\n\n//   }\n\n//   useEffect(() => {\n//     setSize(priceRef.current.value)\n//   }, [])\n\n//   // useEffect(()=>{\n//   // checkBtn();\n//   //   },[data])\n\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\n//   // totval += finalPrice;\n//   // console.log(totval)\n//   return (\n//     <div>\n\n//       <div className=\"card mt-3\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//         <img src={props.imgsrc} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">{props.foodName}</h5>\n//           {/* <p className=\"card-text\">This is some random text. This is description.</p> */}\n//           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//             <select className=\"m-2 h-100 w-20 bg-danger text-black rounded\" style={{ select: \"#FF0000\" }} onClick={handleClick} onChange={handleQty}>\n//               {Array.from(Array(6), (e, i) => {\n//                 return (\n//                   <option key={i + 1} value={i + 1}>{i + 1}</option>)\n//               })}\n//             </select>\n//             <select className=\"m-2 h-100 w-20 bg-danger text-black rounded\" style={{ select: \"#FF0000\" }} ref={priceRef} onClick={handleClick} onChange={handleOptions}>\n//               {priceOptions.map((i) => {\n//                 return <option key={i} value={i}>{i}</option>\n//               })}\n//             </select>\n//             <div className=' d-inline ms-2 h-100 w-20 fs-5' >\n//               ₹{finalPrice}/-\n//             </div>\n//           </div>\n//           <hr></hr>\n//           <button className={`btn btn-danger justify-center ms-2 `} onClick={handleAddToCart}>Add to Cart</button>\n//           {/* <button className={`btn btn-danger justify-center ms-2 ${btnEnable ? \"\" : \"disabled\"}`} onClick={handleRemoveCart}>Remove</button> */}\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }","map":{"version":3,"names":[],"sources":["C:/Users/agast/OneDrive/Desktop/niks/Mern/GrabFood/mernapp/src/components/Card.js"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react'\r\n// import { useNavigate } from 'react-router-dom'\r\n// import { useDispatchCart, useCart } from './ContextReducer'\r\n// // import { Dropdown, DropdownButton } from 'react-bootstrap';\r\n// export default function Card(props) {\r\n//   let data = useCart();\r\n\r\n//   let navigate = useNavigate()\r\n//   const [qty, setQty] = useState(1)\r\n//   const [size, setSize] = useState(\"\")\r\n//   const priceRef = useRef();\r\n//   // const [btnEnable, setBtnEnable] = useState(false);\r\n//   // let totval = 0\r\n//   // let price = Object.values(options).map((value) => {\r\n//   //   return parseInt(value, 10);\r\n//   // });\r\n//   let options = props.options;\r\n//   let priceOptions = Object.keys(options);\r\n//   let foodItem = props.item;\r\n//   const dispatch = useDispatchCart();\r\n//   const handleClick = () => {\r\n//     if (!localStorage.getItem(\"user\")) {\r\n//       navigate(\"/login\")\r\n//     }\r\n//   }\r\n//   const handleQty = (e) => {\r\n//     setQty(e.target.value);\r\n//   }\r\n//   const handleOptions = (e) => {\r\n//     setSize(e.target.value);\r\n//   }\r\n//   const handleAddToCart = async () => {\r\n//     let food = []\r\n//     for (const item of data) {\r\n//       if (item.id === foodItem._id) {\r\n//         food = item;\r\n\r\n//         break;\r\n//       }\r\n//     }\r\n//     console.log(food)\r\n//     console.log(new Date())\r\n//     if (food !== []) {\r\n//       if (food.size === size) {\r\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\r\n//         return\r\n//       }\r\n//       else if (food.size !== size) {\r\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\r\n//         console.log(\"Size different so simply ADD one more to the list\")\r\n//         return\r\n//       }\r\n//       return\r\n//     }\r\n\r\n//     await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size })\r\n\r\n\r\n//     // setBtnEnable(true)\r\n\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     setSize(priceRef.current.value)\r\n//   }, [])\r\n\r\n//   // useEffect(()=>{\r\n//   // checkBtn();\r\n//   //   },[data])\r\n\r\n//   let finalPrice = qty * parseInt(options[size]);   //This is where Price is changing\r\n//   // totval += finalPrice;\r\n//   // console.log(totval)\r\n//   return (\r\n//     <div>\r\n\r\n//       <div className=\"card mt-3\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\r\n//         <img src={props.imgsrc} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\r\n//         <div className=\"card-body\">\r\n//           <h5 className=\"card-title\">{props.foodName}</h5>\r\n//           {/* <p className=\"card-text\">This is some random text. This is description.</p> */}\r\n//           <div className='container w-100 p-0' style={{ height: \"38px\" }}>\r\n//             <select className=\"m-2 h-100 w-20 bg-danger text-black rounded\" style={{ select: \"#FF0000\" }} onClick={handleClick} onChange={handleQty}>\r\n//               {Array.from(Array(6), (e, i) => {\r\n//                 return (\r\n//                   <option key={i + 1} value={i + 1}>{i + 1}</option>)\r\n//               })}\r\n//             </select>\r\n//             <select className=\"m-2 h-100 w-20 bg-danger text-black rounded\" style={{ select: \"#FF0000\" }} ref={priceRef} onClick={handleClick} onChange={handleOptions}>\r\n//               {priceOptions.map((i) => {\r\n//                 return <option key={i} value={i}>{i}</option>\r\n//               })}\r\n//             </select>\r\n//             <div className=' d-inline ms-2 h-100 w-20 fs-5' >\r\n//               ₹{finalPrice}/-\r\n//             </div>\r\n//           </div>\r\n//           <hr></hr>\r\n//           <button className={`btn btn-danger justify-center ms-2 `} onClick={handleAddToCart}>Add to Cart</button>\r\n//           {/* <button className={`btn btn-danger justify-center ms-2 ${btnEnable ? \"\" : \"disabled\"}`} onClick={handleRemoveCart}>Remove</button> */}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}