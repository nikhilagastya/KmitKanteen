{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agast\\\\OneDrive\\\\Desktop\\\\niks\\\\Mern\\\\GrabFood\\\\mernapp\\\\src\\\\screens\\\\Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:5000/create\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: cred.name,\n        rollNo: cred.rollno,\n        phno: cred.phno,\n        email: cred.email,\n        password: cred.password\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    if (json.success) {\n      alert(\"Success\");\n    } else {\n      alert(\"Enter valid credentials\");\n    }\n  };\n  const onChange = e => {\n    setcred({\n      ...cred,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Link","useState","Login","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","name","cred","rollNo","rollno","phno","email","password","json","console","log","success","alert","onChange","setcred","target","value"],"sources":["C:/Users/agast/OneDrive/Desktop/niks/Mern/GrabFood/mernapp/src/screens/Login.js"],"sourcesContent":["\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\n\r\nexport default function Login() {\r\n  const handleSubmit=async(e)=>{\r\n    e.preventDefault();\r\n    const response=await fetch(\"http://localhost:5000/create\",{\r\n    method :'POST',\r\n    headers :{\r\n       'Content-Type' :'application/json'\r\n    },\r\n    body:JSON.stringify({name:cred.name,rollNo:cred.rollno,phno:cred.phno,email:cred.email,password:cred.password})\r\n});\r\nconst json=await response.json();\r\nconsole.log(json)\r\nif(json.success){\r\n  \r\n  alert(\"Success\")\r\n}\r\nelse{\r\n  alert(\"Enter valid credentials\")\r\n}\r\n}\r\nconst onChange=(e)=>{\r\n  setcred({...cred,[e.target.name]: e.target.value})\r\n}\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAAA;AAEhC,eAAe,SAASC,KAAK,GAAG;EAC9B,MAAMC,YAAY,GAAC,MAAMC,CAAC,IAAG;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAC,8BAA8B,EAAC;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACN,cAAc,EAAE;MACnB,CAAC;MACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;QAACC,IAAI,EAACC,IAAI,CAACD,IAAI;QAACE,MAAM,EAACD,IAAI,CAACE,MAAM;QAACC,IAAI,EAACH,IAAI,CAACG,IAAI;QAACC,KAAK,EAACJ,IAAI,CAACI,KAAK;QAACC,QAAQ,EAACL,IAAI,CAACK;MAAQ,CAAC;IAClH,CAAC,CAAC;IACF,MAAMC,IAAI,GAAC,MAAMd,QAAQ,CAACc,IAAI,EAAE;IAChCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAGA,IAAI,CAACG,OAAO,EAAC;MAEdC,KAAK,CAAC,SAAS,CAAC;IAClB,CAAC,MACG;MACFA,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACA,CAAC;EACD,MAAMC,QAAQ,GAAErB,CAAC,IAAG;IAClBsB,OAAO,CAAC;MAAC,GAAGZ,IAAI;MAAC,CAACV,CAAC,CAACuB,MAAM,CAACd,IAAI,GAAGT,CAAC,CAACuB,MAAM,CAACC;IAAK,CAAC,CAAC;EACpD,CAAC;EACC,oBACE;IAAA;IAAA;IAAA;EAAA,QAEM;AAEV;AAAC,KA5BuB1B,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}